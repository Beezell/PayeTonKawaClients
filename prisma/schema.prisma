generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id     Int      @id @default(autoincrement())
  name   String   @unique @db.VarChar()

  clients Client[]

  @@map("roles")
}

model Client {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  pseudo       String   @unique @db.VarChar()
  motDePasse   String   @db.VarChar()
  roleId       Int

  // Relations
  role         Role     @relation(fields: [roleId], references: [id])
  entreprise   EntrepriseDetails?
  personne     PersonneDetails?
  addresses    Address[]

  @@map("clients")
}

model Address {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  codePostal  Int
  adresse     String   @db.VarChar()
  complement  String?  @db.VarChar()
  clientId    String

  client      Client   @relation(fields: [clientId], references: [id])

  @@index([clientId])
  @@map("addresses")
}

model EntrepriseDetails {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now()) @db.Timestamptz(6)
  nomEntreprise  String   @db.VarChar()
  siret          String   @unique @db.VarChar()
  clientId       String   @unique

  client         Client   @relation(fields: [clientId], references: [id])

  @@map("entreprise_details")
}

model PersonneDetails {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now()) @db.Timestamptz(6)
  nom            String   @db.VarChar()
  prenom         String   @db.VarChar()
  mail           String   @unique @db.VarChar()
  telephone      String   @db.VarChar()
  dateNaissance  DateTime @db.Timestamptz(6)
  clientId       String   @unique

  client         Client   @relation(fields: [clientId], references: [id])

  @@map("personne_details")
}